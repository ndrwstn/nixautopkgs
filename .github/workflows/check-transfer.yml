name: Check Transfer

on:
  pull_request:
    types: [synchronize]
    branches:
      - master

permissions:
  contents: read # For checkout and git operations
  checks: write # For creating check runs
  pull-requests: read # For PR details

jobs:
  transfer-checks:
    runs-on: ubuntu-latest
    # SECURITY: Only process PRs from renovate[bot] with proper branch naming
    if: >
      github.actor == 'renovate[bot]' &&
      startsWith(github.head_ref, 'update/') &&
      contains(github.event.pull_request.title, 'chore: update')
    steps:
      - name: Security validation
        id: security
        run: |
          echo "Check transfer security validation"
          echo "Actor: ${{ github.actor }}"
          echo "Branch: ${{ github.head_ref }}"
          echo "PR Title: ${{ github.event.pull_request.title }}"
          echo "Event: ${{ github.event_name }}"

          # SECURITY CHECK 1: Must be renovate[bot]
          if [[ "${{ github.actor }}" != "renovate[bot]" ]]; then
            echo "‚ùå SECURITY: Actor is not renovate[bot]"
            exit 1
          fi

          # SECURITY CHECK 2: Branch must start with update/
          if [[ ! "${{ github.head_ref }}" =~ ^update/ ]]; then
            echo "‚ùå SECURITY: Branch does not start with 'update/'"
            exit 1
          fi

          # SECURITY CHECK 3: PR title must match pattern
          if [[ ! "${{ github.event.pull_request.title }}" =~ \
                ^chore:\ update\ .+\ to\ .+$ ]]; then
            echo "‚ùå SECURITY: PR title does not match expected pattern"
            exit 1
          fi

          echo "‚úÖ Security validation passed"

      - name: Check if commit is from hash update workflow
        id: check-commit
        uses: actions/github-script@v7
        with:
          script: |
            const currentSha = '${{ github.event.after }}';
            const beforeSha = '${{ github.event.before }}';

            console.log('=== CHECKING COMMIT AUTHOR ===');
            console.log(`Current SHA: ${currentSha}`);
            console.log(`Before SHA: ${beforeSha}`);

            try {
              // Get the commit details
              const { data: commit } = await github.rest.git.getCommit({
                owner: context.repo.owner,
                repo: context.repo.repo,
                commit_sha: currentSha
              });

              const authorName = commit.author.name;
              const authorEmail = commit.author.email;
              const commitMessage = commit.message;

              console.log(`Commit author: ${authorName} <${authorEmail}>`);
              console.log(`Commit message: ${commitMessage}`);

              // Skip if this commit was made by our hash update workflow
              if (authorName === 'github-actions[bot]' && 
                  authorEmail === 'github-actions[bot]@users.noreply.github.com' &&
                  commitMessage.includes('chore: update') && 
                  commitMessage.includes('package hashes')) {
                console.log('‚è≠Ô∏è Skipping check transfer - commit is from hash update workflow');
                core.setOutput('should_transfer', 'false');
                return;
              }

              // This is a manual commit or other automated commit, proceed with transfer
              console.log('‚úÖ Manual commit detected - proceeding with check transfer');
              core.setOutput('should_transfer', 'true');

            } catch (error) {
              console.error('‚ùå Failed to get commit details:', error.message);
              // Default to not transferring on error
              core.setOutput('should_transfer', 'false');
            }

      - name: Transfer checks from previous commit
        if: steps.check-commit.outputs.should_transfer == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const currentSha = '${{ github.event.after }}';
            const beforeSha = '${{ github.event.before }}';
            const prNumber = ${{ github.event.pull_request.number }};

            console.log('=== TRANSFERRING CHECKS FROM MANUAL COMMIT ===');
            console.log(`Current SHA: ${currentSha}`);
            console.log(`Before SHA: ${beforeSha}`);
            console.log(`PR Number: ${prNumber}`);

            try {
              // Get all check runs from the previous commit
              const { data: checkRuns } = await github.rest.checks.listForRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: beforeSha,
                per_page: 100
              });

              console.log(`Found ${checkRuns.check_runs.length} check runs on previous commit`);

              let transferredCount = 0;
              let skippedCount = 0;

              for (const checkRun of checkRuns.check_runs) {
                // Skip workflow runs from GitHub Actions to avoid recursion
                if (checkRun.name === 'transfer-checks' || 
                    checkRun.name.includes('Check Transfer') ||
                    checkRun.name === 'update-hash' ||
                    checkRun.name.includes('Update Hash')) {
                  console.log(`‚è≠Ô∏è Skipping workflow check: ${checkRun.name}`);
                  skippedCount++;
                  continue;
                }

                console.log(`üîÑ Transferring check: ${checkRun.name} (${checkRun.conclusion || checkRun.status})`);

                try {
                  // Create a new check run on the current commit with transferred results
                  const transferredCheck = await github.rest.checks.create({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    name: checkRun.name,
                    head_sha: currentSha,
                    status: checkRun.status === 'completed' ? 'completed' : 'in_progress',
                    conclusion: checkRun.conclusion,
                    started_at: checkRun.started_at,
                    completed_at: checkRun.completed_at,
                    output: {
                      title: checkRun.output?.title ? `[TRANSFERRED] ${checkRun.output.title}` : '[TRANSFERRED] Check result transferred from previous commit',
                      summary: `This check was automatically transferred from commit ${beforeSha.substring(0, 7)} after a manual commit was pushed.\n\n` +
                               `**Original Check Details:**\n` +
                               `- Status: ${checkRun.status}\n` +
                               `- Conclusion: ${checkRun.conclusion || 'N/A'}\n` +
                               `- Started: ${checkRun.started_at}\n` +
                               `- Completed: ${checkRun.completed_at || 'N/A'}\n\n` +
                               `**Original Summary:**\n${checkRun.output?.summary || 'No summary available'}\n\n` +
                               `[View original check](${checkRun.html_url})`,
                      text: checkRun.output?.text || ''
                    },
                    details_url: checkRun.details_url,
                    external_id: `manual-transfer-${checkRun.id}`
                  });

                  console.log(`‚úÖ Transferred check: ${checkRun.name} -> ${transferredCheck.data.id}`);
                  transferredCount++;

                } catch (error) {
                  console.error(`‚ùå Failed to transfer check ${checkRun.name}:`, error.message);
                  // Continue with other checks even if one fails
                }
              }

              console.log(`üìä Manual check transfer summary: ${transferredCount} transferred, ${skippedCount} skipped`);

            } catch (error) {
              console.error('‚ùå Failed to transfer checks from manual commit:', error.message);
              // Don't fail the workflow if check transfer fails
              console.log('‚ö†Ô∏è Continuing despite check transfer failure');
            }

      - name: Log completion
        if: always()
        run: |
          echo "=== CHECK TRANSFER COMPLETION ==="
          echo "Should transfer: ${{ steps.check-commit.outputs.should_transfer }}"
          echo "Event: ${{ github.event_name }}"
          echo "Actor: ${{ github.actor }}"
          echo "Current SHA: ${{ github.event.after }}"
          echo "Before SHA: ${{ github.event.before }}"

          if [[ "${{ steps.check-commit.outputs.should_transfer }}" == "true" ]]; then
            echo "‚úÖ Check transfer workflow completed"
          else
            echo "‚è≠Ô∏è Check transfer skipped (hash update workflow commit)"
          fi
