name: üîç Detect Updated Package

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - "packages/*.nix"
  # SECURITY: workflow_dispatch removed to prevent manual triggering
  # Only Renovate PRs should trigger this automation chain

jobs:
  # SECURITY: Comprehensive Renovate-only validation
  security-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    outputs:
      is-renovate: ${{ steps.validate.outputs.is-renovate }}
    steps:
      - name: Validate Renovate PR
        id: validate
        run: |
          echo "=== SECURITY VALIDATION ==="
          echo "Actor: ${{ github.actor }}"
          echo "Event: ${{ github.event_name }}"
          echo "Head ref: ${{ github.head_ref }}"
          echo "PR title: ${{ github.event.pull_request.title }}"
          echo "PR labels: ${{ toJson(github.event.pull_request.labels.*.name) }}"

          # Check 1: Must be renovate[bot]
          if [[ "${{ github.actor }}" != "renovate[bot]" ]]; then
            echo "‚ùå SECURITY: Actor is not renovate[bot]"
            echo "is-renovate=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Check 2: Must have renovate branch prefix
          if [[ ! "${{ github.head_ref }}" =~ ^nixoverlays/ ]]; then
            echo "‚ùå SECURITY: Branch does not have renovate prefix 'nixoverlays/'"
            echo "is-renovate=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Check 3: Must have dependencies label
          LABELS='${{ toJson(github.event.pull_request.labels.*.name) }}'
          if [[ ! "$LABELS" =~ "dependencies" ]]; then
            echo "‚ùå SECURITY: PR does not have 'dependencies' label"
            echo "is-renovate=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Check 4: PR title must match renovate pattern
          PR_TITLE="${{ github.event.pull_request.title }}"
          if [[ ! "$PR_TITLE" =~ ^chore:\ update\ .+\ -\>\ .+ ]]; then
            echo "‚ùå SECURITY: PR title does not match renovate pattern"
            echo "is-renovate=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "‚úÖ SECURITY: All Renovate validation checks passed"
          echo "is-renovate=true" >> $GITHUB_OUTPUT

  detect-package:
    runs-on: ubuntu-latest
    needs: security-check
    if: needs.security-check.outputs.is-renovate == 'true'
    outputs:
      package: ${{ steps.detect.outputs.package }}
      should-update: ${{ steps.detect.outputs.should-update }}
      pr-number: ${{ steps.detect.outputs.pr-number }}

    steps:
      - name: Detect package from Renovate PR title
        id: detect
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_NUMBER="${{ github.event.pull_request.number }}"
          echo "PR Title: $PR_TITLE"
          echo "PR Number: $PR_NUMBER"

          # Parse Renovate PR title to detect which package was updated
          # Renovate titles follow pattern: "chore: update depName -> version"
          if [[ "$PR_TITLE" =~ richardwilkes/gcs ]]; then
            echo "package=gcs" >> $GITHUB_OUTPUT
            echo "should-update=true" >> $GITHUB_OUTPUT
            echo "pr-number=$PR_NUMBER" >> $GITHUB_OUTPUT
            echo "‚úÖ Detected GCS package update from Renovate"
          elif [[ "$PR_TITLE" =~ sst/opencode ]]; then
            echo "package=opencode" >> $GITHUB_OUTPUT
            echo "should-update=true" >> $GITHUB_OUTPUT
            echo "pr-number=$PR_NUMBER" >> $GITHUB_OUTPUT
            echo "‚úÖ Detected OpenCode package update from Renovate"
          else
            echo "package=all" >> $GITHUB_OUTPUT
            echo "should-update=true" >> $GITHUB_OUTPUT
            echo "pr-number=$PR_NUMBER" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è  Could not detect specific package - will update all packages"
          fi

  trigger-hash-update:
    runs-on: ubuntu-latest
    needs: detect-package
    if: needs.detect-package.outputs.should-update == 'true'
    steps:
      - name: Trigger hash update workflow
        uses: actions/github-script@v7
        with:
          script: |
            const package = '${{ needs.detect-package.outputs.package }}';
            const prNumber = '${{ needs.detect-package.outputs.pr-number }}';
            const ref = '${{ github.head_ref || github.ref_name }}';

            console.log(`Triggering hash update for package: ${package}`);
            console.log(`PR Number: ${prNumber}`);
            console.log(`Ref: ${ref}`);

            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'update-build.yml',
              ref: ref,
              inputs: {
                package: package,
                pr_number: prNumber,
                target_ref: ref
              }
            });
