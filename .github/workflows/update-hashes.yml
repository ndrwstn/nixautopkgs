name: üîÑ Update Package Hashes

on:
  workflow_dispatch:
    inputs:
      package:
        description: "Package to update (gcs, opencode, or all)"
        required: true
        type: string
      pr_number:
        description: "PR number (if applicable)"
        required: false
        type: string
      target_ref:
        description: "Target branch/ref to update"
        required: true
        type: string

jobs:
  update-hashes:
    runs-on: ubuntu-latest
    outputs:
      hashes-updated: ${{ steps.update-hashes.outputs.updated }}
      package: ${{ inputs.package }}
      pr-number: ${{ inputs.pr_number }}
      target-ref: ${{ inputs.target_ref }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ inputs.target_ref }}
          fetch-depth: 0

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Update package hashes
        id: update-hashes
        run: |
          PACKAGE="${{ inputs.package }}"
          echo "Updating hashes for package: $PACKAGE"

          if [[ "$PACKAGE" == "gcs" ]]; then
            echo "Running GCS hash update script..."
            if ./bin/update-gcs-hashes.sh; then
              echo "updated=true" >> $GITHUB_OUTPUT
              echo "‚úÖ GCS hashes updated successfully"
            else
              echo "updated=false" >> $GITHUB_OUTPUT
              echo "‚ÑπÔ∏è  GCS hashes unchanged or failed"
            fi
          elif [[ "$PACKAGE" == "opencode" ]]; then
            echo "Running OpenCode hash update script..."
            if ./bin/update-opencode-hashes.sh; then
              echo "updated=true" >> $GITHUB_OUTPUT
              echo "‚úÖ OpenCode hashes updated successfully"
            else
              echo "updated=false" >> $GITHUB_OUTPUT
              echo "‚ÑπÔ∏è  OpenCode hashes unchanged or failed"
            fi
          else
            echo "Running all hash update scripts..."
            if ./bin/update-hashes.sh; then
              echo "updated=true" >> $GITHUB_OUTPUT
              echo "‚úÖ All package hashes updated successfully"
            else
              echo "updated=false" >> $GITHUB_OUTPUT
              echo "‚ÑπÔ∏è  No hash updates needed"
            fi
          fi

      - name: Commit hash updates
        if: steps.update-hashes.outputs.updated == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          git add packages/*.nix

          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            PACKAGE="${{ inputs.package }}"
            if [[ "$PACKAGE" == "all" ]]; then
              COMMIT_MSG="chore: update nix package hashes - auto-updated by GitHub Actions"
            else
              COMMIT_MSG="chore: update $PACKAGE package hashes - auto-updated by GitHub Actions"
            fi
            git commit -m "$COMMIT_MSG"
            git push origin ${{ inputs.target_ref }}
          fi

  trigger-build-test:
    runs-on: ubuntu-latest
    needs: update-hashes
    if: always() && (needs.update-hashes.result == 'success')
    steps:
      - name: Generate GitHub App Token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Trigger update and build workflow
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            const package = '${{ needs.update-hashes.outputs.package }}';
            const prNumber = '${{ needs.update-hashes.outputs.pr-number }}';
            const targetRef = '${{ needs.update-hashes.outputs.target-ref }}';

            console.log(`Triggering update and build for package: ${package}`);
            console.log(`PR Number: ${prNumber}`);
            console.log(`Target Ref: ${targetRef}`);

            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'update-build.yml',
              ref: 'master',
              inputs: {
                package: package,
                pr_number: prNumber,
                target_ref: targetRef
              }
            });
