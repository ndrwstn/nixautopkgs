name: üì¶ Package Update Orchestrator

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - "packages/*.nix"
  # SECURITY: workflow_dispatch removed to prevent manual triggering
  # Only Renovate PRs should trigger this automation

jobs:
  # SECURITY: Comprehensive Renovate-only validation
  security-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    outputs:
      is-renovate: ${{ steps.validate.outputs.is-renovate }}
    steps:
      - name: Validate Renovate PR
        id: validate
        run: |
          echo "=== ORCHESTRATOR SECURITY VALIDATION ==="
          echo "Actor: ${{ github.actor }}"
          echo "Event: ${{ github.event_name }}"
          echo "Head ref: ${{ github.head_ref }}"
          echo "PR title: ${{ github.event.pull_request.title }}"

          # Must be renovate[bot]
          if [[ "${{ github.actor }}" != "renovate[bot]" ]]; then
            echo "‚ùå SECURITY: Actor is not renovate[bot]"
            echo "is-renovate=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Must have renovate branch prefix
          if [[ ! "${{ github.head_ref }}" =~ ^nixoverlays/ ]]; then
            echo "‚ùå SECURITY: Branch does not have renovate prefix"
            echo "is-renovate=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "‚úÖ SECURITY: Renovate validation passed"
          echo "is-renovate=true" >> $GITHUB_OUTPUT

  orchestrate:
    runs-on: ubuntu-latest
    needs: security-check
    if: needs.security-check.outputs.is-renovate == 'true'
    steps:
      - name: Trigger modular workflow
        uses: actions/github-script@v7
        with:
          script: |
            // Determine package from Renovate PR
            let package = 'all';
            const prTitle = context.payload.pull_request.title;
            const prNumber = context.payload.pull_request.number.toString();
            const targetRef = context.payload.pull_request.head.ref;

            console.log(`PR Title: ${prTitle}`);
            console.log(`PR Number: ${prNumber}`);
            console.log(`Target Ref: ${targetRef}`);

            // Parse Renovate PR title to detect which package was updated
            // Renovate titles follow pattern: "chore: update depName -> version"
            if (prTitle.includes('richardwilkes/gcs')) {
              package = 'gcs';
              console.log('‚úÖ Detected GCS package update from Renovate');
            } else if (prTitle.includes('sst/opencode')) {
              package = 'opencode';
              console.log('‚úÖ Detected OpenCode package update from Renovate');
            } else {
              package = 'all';
              console.log('‚ö†Ô∏è  Could not detect specific package - will update all packages');
            }

            console.log(`Package: ${package}`);

            // Trigger the hash update workflow directly
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'update-hashes-component.yml',
              ref: targetRef,
              inputs: {
                package: package,
                pr_number: prNumber,
                target_ref: targetRef
              }
            });

            console.log('‚úÖ Triggered secure hash update workflow for Renovate PR');
